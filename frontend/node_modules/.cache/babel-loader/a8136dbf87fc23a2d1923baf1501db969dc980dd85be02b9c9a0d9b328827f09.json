{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\life-management-app\\\\frontend\\\\src\\\\components\\\\HabitTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Card, CardContent, Grid, Button, IconButton, LinearProgress, Chip, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, Fab } from '@mui/material';\nimport { Add, Edit, Delete, FitnessCenter, CheckCircle, RadioButtonUnchecked, Whatshot, CalendarToday } from '@mui/icons-material';\nimport { format, startOfWeek, addDays, isSameDay } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitTracker = () => {\n  _s();\n  const [habits, setHabits] = useState([{\n    id: 1,\n    name: 'Morning Exercise',\n    description: '30 minutes of physical activity',\n    category: 'Health',\n    target: 7,\n    // times per week\n    color: '#4caf50',\n    streak: 5,\n    completions: {\n      '2024-01-08': true,\n      '2024-01-09': true,\n      '2024-01-10': true,\n      '2024-01-11': true,\n      '2024-01-12': true\n    }\n  }, {\n    id: 2,\n    name: 'Read Books',\n    description: 'Read for at least 20 minutes',\n    category: 'Learning',\n    target: 5,\n    color: '#2196f3',\n    streak: 12,\n    completions: {\n      '2024-01-08': true,\n      '2024-01-09': false,\n      '2024-01-10': true,\n      '2024-01-11': true,\n      '2024-01-12': true\n    }\n  }, {\n    id: 3,\n    name: 'Drink Water',\n    description: 'Drink at least 8 glasses of water',\n    category: 'Health',\n    target: 7,\n    color: '#00bcd4',\n    streak: 3,\n    completions: {\n      '2024-01-10': true,\n      '2024-01-11': true,\n      '2024-01-12': true\n    }\n  }, {\n    id: 4,\n    name: 'Meditation',\n    description: '10 minutes of mindfulness meditation',\n    category: 'Mindfulness',\n    target: 7,\n    color: '#9c27b0',\n    streak: 8,\n    completions: {\n      '2024-01-08': true,\n      '2024-01-09': true,\n      '2024-01-10': false,\n      '2024-01-11': true,\n      '2024-01-12': true\n    }\n  }]);\n  const [open, setOpen] = useState(false);\n  const [editingHabit, setEditingHabit] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    category: 'Health',\n    target: 7,\n    color: '#4caf50'\n  });\n  const getCurrentWeek = () => {\n    const today = new Date();\n    const start = startOfWeek(today, {\n      weekStartsOn: 1\n    }); // Monday\n    return Array.from({\n      length: 7\n    }, (_, i) => addDays(start, i));\n  };\n  const currentWeek = getCurrentWeek();\n  const toggleHabitCompletion = (habitId, date) => {\n    const dateStr = format(date, 'yyyy-MM-dd');\n    setHabits(habits.map(habit => {\n      if (habit.id === habitId) {\n        const newCompletions = {\n          ...habit.completions,\n          [dateStr]: !habit.completions[dateStr]\n        };\n\n        // Recalculate streak\n        let streak = 0;\n        const today = new Date();\n        for (let i = 0; i < 30; i++) {\n          const checkDate = format(addDays(today, -i), 'yyyy-MM-dd');\n          if (newCompletions[checkDate]) {\n            streak++;\n          } else {\n            break;\n          }\n        }\n        return {\n          ...habit,\n          completions: newCompletions,\n          streak\n        };\n      }\n      return habit;\n    }));\n  };\n  const getWeeklyProgress = habit => {\n    const completed = currentWeek.filter(date => {\n      const dateStr = format(date, 'yyyy-MM-dd');\n      return habit.completions[dateStr];\n    }).length;\n    return completed / habit.target * 100;\n  };\n  const handleAddHabit = () => {\n    const newHabit = {\n      ...formData,\n      id: Date.now(),\n      streak: 0,\n      completions: {}\n    };\n    setHabits([...habits, newHabit]);\n    handleClose();\n  };\n  const handleEditHabit = habit => {\n    setEditingHabit(habit);\n    setFormData({\n      name: habit.name,\n      description: habit.description,\n      category: habit.category,\n      target: habit.target,\n      color: habit.color\n    });\n    setOpen(true);\n  };\n  const handleUpdateHabit = () => {\n    setHabits(habits.map(habit => habit.id === editingHabit.id ? {\n      ...habit,\n      ...formData\n    } : habit));\n    handleClose();\n  };\n  const handleDeleteHabit = id => {\n    setHabits(habits.filter(habit => habit.id !== id));\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setEditingHabit(null);\n    setFormData({\n      name: '',\n      description: '',\n      category: 'Health',\n      target: 7,\n      color: '#4caf50'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(FitnessCenter, {\n        sx: {\n          mr: 2,\n          color: 'primary.main'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Habit Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Week of \", format(currentWeek[0], 'MMM dd'), \" - \", format(currentWeek[6], 'MMM dd, yyyy')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          sx: {\n            mt: 1\n          },\n          children: currentWeek.map(date => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                display: \"block\",\n                children: format(date, 'EEE')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  fontWeight: isSameDay(date, new Date()) ? 'bold' : 'normal',\n                  color: isSameDay(date, new Date()) ? 'primary.main' : 'inherit'\n                },\n                children: format(date, 'dd')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)\n          }, date.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: habits.map(habit => {\n        const progress = getWeeklyProgress(habit);\n        const completed = currentWeek.filter(date => {\n          const dateStr = format(date, 'yyyy-MM-dd');\n          return habit.completions[dateStr];\n        }).length;\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              borderLeft: `4px solid ${habit.color}`\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'flex-start',\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    flex: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    gutterBottom: true,\n                    children: habit.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    gutterBottom: true,\n                    children: habit.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      gap: 1,\n                      alignItems: 'center',\n                      mb: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Chip, {\n                      size: \"small\",\n                      label: habit.category,\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      size: \"small\",\n                      label: `${habit.streak} day streak`,\n                      icon: /*#__PURE__*/_jsxDEV(Whatshot, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 272,\n                        columnNumber: 33\n                      }, this),\n                      color: \"warning\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      size: \"small\",\n                      label: `${completed}/${habit.target} this week`,\n                      color: \"primary\",\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleEditHabit(habit),\n                    size: \"small\",\n                    sx: {\n                      mr: 1\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleDeleteHabit(habit.id),\n                    size: \"small\",\n                    color: \"error\",\n                    children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: \"Weekly Progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [Math.round(progress), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                  variant: \"determinate\",\n                  value: progress,\n                  sx: {\n                    height: 8,\n                    borderRadius: 4,\n                    '& .MuiLinearProgress-bar': {\n                      backgroundColor: habit.color\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                children: currentWeek.map(date => {\n                  const dateStr = format(date, 'yyyy-MM-dd');\n                  const isCompleted = habit.completions[dateStr];\n                  const isToday = isSameDay(date, new Date());\n                  const isFuture = date > new Date();\n                  return /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: true,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        textAlign: 'center'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: () => toggleHabitCompletion(habit.id, date),\n                        disabled: isFuture,\n                        sx: {\n                          color: isCompleted ? habit.color : 'action.disabled',\n                          border: isToday ? '2px solid' : 'none',\n                          borderColor: 'primary.main',\n                          '&:hover': {\n                            backgroundColor: 'action.hover'\n                          }\n                        },\n                        children: isCompleted ? /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 343,\n                          columnNumber: 46\n                        }, this) : /*#__PURE__*/_jsxDEV(RadioButtonUnchecked, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 343,\n                          columnNumber: 64\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 331,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 27\n                    }, this)\n                  }, date.toString(), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)\n        }, habit.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      sx: {\n        position: 'fixed',\n        bottom: 16,\n        right: 16\n      },\n      onClick: () => setOpen(true),\n      children: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: editingHabit ? 'Edit Habit' : 'Add New Habit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Habit Name\",\n              value: formData.name,\n              onChange: e => setFormData({\n                ...formData,\n                name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Description\",\n              multiline: true,\n              rows: 2,\n              value: formData.description,\n              onChange: e => setFormData({\n                ...formData,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: formData.category,\n                label: \"Category\",\n                onChange: e => setFormData({\n                  ...formData,\n                  category: e.target.value\n                }),\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Health\",\n                  children: \"Health\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Learning\",\n                  children: \"Learning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Productivity\",\n                  children: \"Productivity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Mindfulness\",\n                  children: \"Mindfulness\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Social\",\n                  children: \"Social\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Creative\",\n                  children: \"Creative\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Weekly Target\",\n              type: \"number\",\n              value: formData.target,\n              onChange: e => setFormData({\n                ...formData,\n                target: parseInt(e.target.value) || 1\n              }),\n              inputProps: {\n                min: 1,\n                max: 7\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Color\",\n              type: \"color\",\n              value: formData.color,\n              onChange: e => setFormData({\n                ...formData,\n                color: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: editingHabit ? handleUpdateHabit : handleAddHabit,\n          variant: \"contained\",\n          disabled: !formData.name.trim(),\n          children: editingHabit ? 'Update' : 'Add'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(HabitTracker, \"Jm4qO3nQfNrxhteac8k88Nwu2WM=\");\n_c = HabitTracker;\nexport default HabitTracker;\nvar _c;\n$RefreshReg$(_c, \"HabitTracker\");","map":{"version":3,"names":["React","useState","Box","Typography","Card","CardContent","Grid","Button","IconButton","LinearProgress","Chip","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","Fab","Add","Edit","Delete","FitnessCenter","CheckCircle","RadioButtonUnchecked","Whatshot","CalendarToday","format","startOfWeek","addDays","isSameDay","jsxDEV","_jsxDEV","HabitTracker","_s","habits","setHabits","id","name","description","category","target","color","streak","completions","open","setOpen","editingHabit","setEditingHabit","formData","setFormData","getCurrentWeek","today","Date","start","weekStartsOn","Array","from","length","_","i","currentWeek","toggleHabitCompletion","habitId","date","dateStr","map","habit","newCompletions","checkDate","getWeeklyProgress","completed","filter","handleAddHabit","newHabit","now","handleClose","handleEditHabit","handleUpdateHabit","handleDeleteHabit","sx","p","children","display","alignItems","mb","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","gutterBottom","container","spacing","mt","item","xs","textAlign","fontWeight","toString","progress","borderLeft","justifyContent","flex","gap","size","label","icon","onClick","Math","round","value","height","borderRadius","backgroundColor","isCompleted","isToday","isFuture","disabled","border","borderColor","position","bottom","right","onClose","maxWidth","fullWidth","onChange","e","multiline","rows","type","parseInt","inputProps","min","max","trim","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/life-management-app/frontend/src/components/HabitTracker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  LinearProgress,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Fab,\r\n} from '@mui/material';\r\nimport {\r\n  Add,\r\n  Edit,\r\n  Delete,\r\n  FitnessCenter,\r\n  CheckCircle,\r\n  RadioButtonUnchecked,\r\n  Whatshot,\r\n  CalendarToday,\r\n} from '@mui/icons-material';\r\nimport { format, startOfWeek, addDays, isSameDay } from 'date-fns';\r\n\r\nconst HabitTracker = () => {\r\n  const [habits, setHabits] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'Morning Exercise',\r\n      description: '30 minutes of physical activity',\r\n      category: 'Health',\r\n      target: 7, // times per week\r\n      color: '#4caf50',\r\n      streak: 5,\r\n      completions: {\r\n        '2024-01-08': true,\r\n        '2024-01-09': true,\r\n        '2024-01-10': true,\r\n        '2024-01-11': true,\r\n        '2024-01-12': true,\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Read Books',\r\n      description: 'Read for at least 20 minutes',\r\n      category: 'Learning',\r\n      target: 5,\r\n      color: '#2196f3',\r\n      streak: 12,\r\n      completions: {\r\n        '2024-01-08': true,\r\n        '2024-01-09': false,\r\n        '2024-01-10': true,\r\n        '2024-01-11': true,\r\n        '2024-01-12': true,\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Drink Water',\r\n      description: 'Drink at least 8 glasses of water',\r\n      category: 'Health',\r\n      target: 7,\r\n      color: '#00bcd4',\r\n      streak: 3,\r\n      completions: {\r\n        '2024-01-10': true,\r\n        '2024-01-11': true,\r\n        '2024-01-12': true,\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Meditation',\r\n      description: '10 minutes of mindfulness meditation',\r\n      category: 'Mindfulness',\r\n      target: 7,\r\n      color: '#9c27b0',\r\n      streak: 8,\r\n      completions: {\r\n        '2024-01-08': true,\r\n        '2024-01-09': true,\r\n        '2024-01-10': false,\r\n        '2024-01-11': true,\r\n        '2024-01-12': true,\r\n      },\r\n    },\r\n  ]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [editingHabit, setEditingHabit] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    category: 'Health',\r\n    target: 7,\r\n    color: '#4caf50',\r\n  });\r\n\r\n  const getCurrentWeek = () => {\r\n    const today = new Date();\r\n    const start = startOfWeek(today, { weekStartsOn: 1 }); // Monday\r\n    return Array.from({ length: 7 }, (_, i) => addDays(start, i));\r\n  };\r\n\r\n  const currentWeek = getCurrentWeek();\r\n\r\n  const toggleHabitCompletion = (habitId, date) => {\r\n    const dateStr = format(date, 'yyyy-MM-dd');\r\n    setHabits(habits.map(habit => {\r\n      if (habit.id === habitId) {\r\n        const newCompletions = {\r\n          ...habit.completions,\r\n          [dateStr]: !habit.completions[dateStr],\r\n        };\r\n        \r\n        // Recalculate streak\r\n        let streak = 0;\r\n        const today = new Date();\r\n        for (let i = 0; i < 30; i++) {\r\n          const checkDate = format(addDays(today, -i), 'yyyy-MM-dd');\r\n          if (newCompletions[checkDate]) {\r\n            streak++;\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n        \r\n        return {\r\n          ...habit,\r\n          completions: newCompletions,\r\n          streak,\r\n        };\r\n      }\r\n      return habit;\r\n    }));\r\n  };\r\n\r\n  const getWeeklyProgress = (habit) => {\r\n    const completed = currentWeek.filter(date => {\r\n      const dateStr = format(date, 'yyyy-MM-dd');\r\n      return habit.completions[dateStr];\r\n    }).length;\r\n    return (completed / habit.target) * 100;\r\n  };\r\n\r\n  const handleAddHabit = () => {\r\n    const newHabit = {\r\n      ...formData,\r\n      id: Date.now(),\r\n      streak: 0,\r\n      completions: {},\r\n    };\r\n    setHabits([...habits, newHabit]);\r\n    handleClose();\r\n  };\r\n\r\n  const handleEditHabit = (habit) => {\r\n    setEditingHabit(habit);\r\n    setFormData({\r\n      name: habit.name,\r\n      description: habit.description,\r\n      category: habit.category,\r\n      target: habit.target,\r\n      color: habit.color,\r\n    });\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleUpdateHabit = () => {\r\n    setHabits(habits.map(habit => \r\n      habit.id === editingHabit.id ? { ...habit, ...formData } : habit\r\n    ));\r\n    handleClose();\r\n  };\r\n\r\n  const handleDeleteHabit = (id) => {\r\n    setHabits(habits.filter(habit => habit.id !== id));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setEditingHabit(null);\r\n    setFormData({\r\n      name: '',\r\n      description: '',\r\n      category: 'Health',\r\n      target: 7,\r\n      color: '#4caf50',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <FitnessCenter sx={{ mr: 2, color: 'primary.main' }} />\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n          Habit Tracker\r\n        </Typography>\r\n      </Box>\r\n\r\n      {/* Week Header */}\r\n      <Card sx={{ mb: 3 }}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Week of {format(currentWeek[0], 'MMM dd')} - {format(currentWeek[6], 'MMM dd, yyyy')}\r\n          </Typography>\r\n          <Grid container spacing={1} sx={{ mt: 1 }}>\r\n            {currentWeek.map((date) => (\r\n              <Grid item xs key={date.toString()}>\r\n                <Box sx={{ textAlign: 'center' }}>\r\n                  <Typography variant=\"caption\" display=\"block\">\r\n                    {format(date, 'EEE')}\r\n                  </Typography>\r\n                  <Typography \r\n                    variant=\"body2\" \r\n                    sx={{ \r\n                      fontWeight: isSameDay(date, new Date()) ? 'bold' : 'normal',\r\n                      color: isSameDay(date, new Date()) ? 'primary.main' : 'inherit',\r\n                    }}\r\n                  >\r\n                    {format(date, 'dd')}\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Habits List */}\r\n      <Grid container spacing={3}>\r\n        {habits.map((habit) => {\r\n          const progress = getWeeklyProgress(habit);\r\n          const completed = currentWeek.filter(date => {\r\n            const dateStr = format(date, 'yyyy-MM-dd');\r\n            return habit.completions[dateStr];\r\n          }).length;\r\n\r\n          return (\r\n            <Grid item xs={12} key={habit.id}>\r\n              <Card sx={{ borderLeft: `4px solid ${habit.color}` }}>\r\n                <CardContent>\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\r\n                    <Box sx={{ flex: 1 }}>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        {habit.name}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                        {habit.description}\r\n                      </Typography>\r\n                      <Box sx={{ display: 'flex', gap: 1, alignItems: 'center', mb: 2 }}>\r\n                        <Chip \r\n                          size=\"small\" \r\n                          label={habit.category} \r\n                          variant=\"outlined\"\r\n                        />\r\n                        <Chip \r\n                          size=\"small\" \r\n                          label={`${habit.streak} day streak`} \r\n                          icon={<Whatshot />}\r\n                          color=\"warning\"\r\n                        />\r\n                        <Chip \r\n                          size=\"small\" \r\n                          label={`${completed}/${habit.target} this week`}\r\n                          color=\"primary\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Box>\r\n                    </Box>\r\n                    <Box>\r\n                      <IconButton \r\n                        onClick={() => handleEditHabit(habit)}\r\n                        size=\"small\"\r\n                        sx={{ mr: 1 }}\r\n                      >\r\n                        <Edit />\r\n                      </IconButton>\r\n                      <IconButton \r\n                        onClick={() => handleDeleteHabit(habit.id)}\r\n                        size=\"small\"\r\n                        color=\"error\"\r\n                      >\r\n                        <Delete />\r\n                      </IconButton>\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  {/* Progress Bar */}\r\n                  <Box sx={{ mb: 2 }}>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                      <Typography variant=\"body2\">Weekly Progress</Typography>\r\n                      <Typography variant=\"body2\">{Math.round(progress)}%</Typography>\r\n                    </Box>\r\n                    <LinearProgress \r\n                      variant=\"determinate\" \r\n                      value={progress} \r\n                      sx={{ \r\n                        height: 8, \r\n                        borderRadius: 4,\r\n                        '& .MuiLinearProgress-bar': {\r\n                          backgroundColor: habit.color,\r\n                        },\r\n                      }} \r\n                    />\r\n                  </Box>\r\n\r\n                  {/* Daily Checkboxes */}\r\n                  <Grid container spacing={1}>\r\n                    {currentWeek.map((date) => {\r\n                      const dateStr = format(date, 'yyyy-MM-dd');\r\n                      const isCompleted = habit.completions[dateStr];\r\n                      const isToday = isSameDay(date, new Date());\r\n                      const isFuture = date > new Date();\r\n\r\n                      return (\r\n                        <Grid item xs key={date.toString()}>\r\n                          <Box sx={{ textAlign: 'center' }}>\r\n                            <IconButton\r\n                              onClick={() => toggleHabitCompletion(habit.id, date)}\r\n                              disabled={isFuture}\r\n                              sx={{\r\n                                color: isCompleted ? habit.color : 'action.disabled',\r\n                                border: isToday ? '2px solid' : 'none',\r\n                                borderColor: 'primary.main',\r\n                                '&:hover': {\r\n                                  backgroundColor: 'action.hover',\r\n                                },\r\n                              }}\r\n                            >\r\n                              {isCompleted ? <CheckCircle /> : <RadioButtonUnchecked />}\r\n                            </IconButton>\r\n                          </Box>\r\n                        </Grid>\r\n                      );\r\n                    })}\r\n                  </Grid>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n\r\n      {/* Add Habit FAB */}\r\n      <Fab\r\n        color=\"primary\"\r\n        aria-label=\"add\"\r\n        sx={{ position: 'fixed', bottom: 16, right: 16 }}\r\n        onClick={() => setOpen(true)}\r\n      >\r\n        <Add />\r\n      </Fab>\r\n\r\n      {/* Add/Edit Habit Dialog */}\r\n      <Dialog open={open} onClose={handleClose} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          {editingHabit ? 'Edit Habit' : 'Add New Habit'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} sx={{ mt: 1 }}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Habit Name\"\r\n                value={formData.name}\r\n                onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Description\"\r\n                multiline\r\n                rows={2}\r\n                value={formData.description}\r\n                onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Category</InputLabel>\r\n                <Select\r\n                  value={formData.category}\r\n                  label=\"Category\"\r\n                  onChange={(e) => setFormData({ ...formData, category: e.target.value })}\r\n                >\r\n                  <MenuItem value=\"Health\">Health</MenuItem>\r\n                  <MenuItem value=\"Learning\">Learning</MenuItem>\r\n                  <MenuItem value=\"Productivity\">Productivity</MenuItem>\r\n                  <MenuItem value=\"Mindfulness\">Mindfulness</MenuItem>\r\n                  <MenuItem value=\"Social\">Social</MenuItem>\r\n                  <MenuItem value=\"Creative\">Creative</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Weekly Target\"\r\n                type=\"number\"\r\n                value={formData.target}\r\n                onChange={(e) => setFormData({ ...formData, target: parseInt(e.target.value) || 1 })}\r\n                inputProps={{ min: 1, max: 7 }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Color\"\r\n                type=\"color\"\r\n                value={formData.color}\r\n                onChange={(e) => setFormData({ ...formData, color: e.target.value })}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button \r\n            onClick={editingHabit ? handleUpdateHabit : handleAddHabit} \r\n            variant=\"contained\"\r\n            disabled={!formData.name.trim()}\r\n          >\r\n            {editingHabit ? 'Update' : 'Add'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HabitTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}